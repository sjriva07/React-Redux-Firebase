{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/signedOutLink.js","components/layout/Navbar.js","components/dashboard/Notifiction.js","components/abhipray/AbhipraySummary.js","components/abhipray/AbhiprayList.js","components/dashboard/Dashboard.js","components/abhipray/AbhiprayDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/abhipray/CreateAbhipray.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/roorReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","console","log","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notification","notifications","map","ekNoti","key","id","user","content","moment","time","toDate","fromNow","AbhipraySummary","ekAbhi","title","authfn","authln","createdAt","calendar","AbhiprayList","abhiprayKiList","Dashboard","this","Component","compose","firestore","ordered","abhipray","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authErr","onSubmit","htmlFor","onChange","authError","creds","Credential","signInWithEmailAndPassword","catch","err","SignUp","fname","lname","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateAbhipray","createProject","history","push","name","cols","rows","project","authId","add","authid","Date","App","exact","path","component","AbhiprayDetails","Boolean","window","location","hostname","initState","authReducer","action","message","books","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.1c0891f1.chunk.js","sourcesContent":["import React, { Profiler } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signOut} from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = ( props) =>{\r\n    console.log(\"hiikkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk\");\r\n    console.log(props);\r\n    return(\r\n         <ul className=\"right\">\r\n         <li><NavLink to=\"/createAbhipray\">Likhee</NavLink></li>\r\n         <li><a onClick={props.signOut}>Log Out</a></li>\r\n         <li><NavLink to=\"/\" className=\"btn btn-floating grey lighten-1\">{props.profile.initials}</NavLink></li>\r\n         </ul>\r\n        \r\n\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch)  =>{\r\n    return {\r\n        signOut: ()=>dispatch(signOut())\r\n    }\r\n}\r\n  \r\nexport default connect(null,mapDispatchToProps)( SignedInLinks); ","export const signIn=(Credential)=>{\r\n    return (dispatch,getState,{getFirebase})=>{\r\n        const firebase=getFirebase();\r\n          \r\n        firebase.auth().signInWithEmailAndPassword(\r\n            Credential.email,\r\n            Credential.password\r\n        ).then(()=>{\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch((err)=>{\r\n            dispatch({type: 'LOGIN_ERROR',err});\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const signOut=()=>{\r\n    return (dispatch,getState,{getFirebase})=>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const signUp=(newUser)=>{\r\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase=getFirebase();\r\n        const firestore=getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n\r\n        ).then((resp)=>{\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                fname:newUser.fname,\r\n                lname:newUser.lname,\r\n                initials:newUser.fname[0]+newUser.lname[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: 'SIGNUP_SUCCESS'});\r\n        }).catch((err)=>{\r\n            dispatch({type: 'SIGNUP_ERROR',err});\r\n        })\r\n        \r\n    }\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () =>{\r\n    return(\r\n         <ul className=\"right\">\r\n         <li><NavLink to=\"/signup\">SignUp</NavLink></li>\r\n         <li><NavLink to=\"/signin\">SignIn</NavLink></li>\r\n         \r\n         </ul>\r\n        \r\n\r\n    );\r\n}\r\nexport default SignedOutLinks; ","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './signedOutLink';\r\n//to check logged in status\r\nimport {connect} from 'react-redux';\r\n\r\nconst Navbar = (props) =>{\r\n    const {auth,profile}=props;\r\n    console.log(auth);\r\n\r\n    const links=auth.uid?<SignedInLinks profile={profile}/>:<SignedOutLinks/>;\r\n    return(\r\n         <nav className=\"nav-wrapper gray darken-3\">\r\n             <div className=\"container\">\r\n             <Link to='/' className=\"brand-logo\">Abhipray</Link>\r\n             {/* <SignedInLinks></SignedInLinks>\r\n             <SignedOutLinks></SignedOutLinks> */}\r\n             {links}\r\n\r\n             </div>\r\n         </nav>\r\n        \r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    //console.log(state);\r\n    return{\r\n        auth:state.firebase.auth,\r\n        profile:state.firebase.profile\r\n\r\n    }\r\n\r\n}\r\n \r\nexport default connect(mapStateToProps)( Navbar); ","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notification =(props)=>{\r\n    const {notifications}=props;\r\n    console.log('dig ding');\r\n    console.log(props);\r\n    \r\n   \r\n    return(\r\n        <div className=\"section\">\r\n           <div className=\"card z-depth-4\">\r\n             <div className=\"card-content\">\r\n                <span className=\"card-title\">\r\n                Notifications\r\n\r\n                </span>\r\n                <ul className=\"notifications\">\r\n                  {\r\n                      notifications && notifications.map(ekNoti=>{\r\n                        console.log({ekNoti});\r\n                          return(\r\n                            \r\n                              <li key={ekNoti.id}>\r\n                              <span className=\"pink-text\">{ekNoti.user}  </span>\r\n                              <span>{ekNoti.content}</span>\r\n                              <div className=\"grey-text note-date\">\r\n                              {moment(ekNoti.time.toDate()).fromNow()}\r\n\r\n                              </div>\r\n\r\n                              </li>\r\n                          )\r\n                      })\r\n                  }\r\n\r\n                </ul>\r\n\r\n             </div>\r\n\r\n           </div>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst AbhipraySummary = ({ekAbhi}) =>\r\n{\r\n    return(\r\n        <div className=\"card z-depth-3 AbhipraySummary \">\r\n               <div className=\"card-content red-text text-darken-3\">\r\n                  <span className=\"book-title\">{ekAbhi.title}</span>\r\n                  <p>Posted by {ekAbhi.authfn} {ekAbhi.authln}</p>\r\n                  <p className=\"gray-text\">{moment(ekAbhi.createdAt.toDate()).calendar()}</p>\r\n\r\n               </div>\r\n\r\n             </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default AbhipraySummary;","import React from 'react';\r\nimport AbhipraySummary from './AbhipraySummary';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nconst AbhiprayList=({abhiprayKiList})=>{\r\n    return(\r\n        <div className=\"mainList section\">\r\n            {\r\n                abhiprayKiList && abhiprayKiList.map((ekAbhi)=>\r\n                {\r\n                   \r\n                    return(\r\n                        <Link to={'abhipray/'+ekAbhi.id}><AbhipraySummary ekAbhi={ekAbhi} key={ekAbhi.id}/></Link>\r\n                        \r\n                    )\r\n                })\r\n            }\r\n\r\n\r\n\r\n        {/* <AbhipraySummary/>\r\n        <AbhipraySummary/>\r\n        <AbhipraySummary/> */}\r\n\r\n             \r\n             \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AbhiprayList;","import React, { Component } from 'react';\r\nimport Notification from './Notifiction';\r\n\r\nimport AbhiprayList from '../abhipray/AbhiprayList';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\n \r\nclass Dashboard extends Component{\r\n    \r\n    render(){\r\n        //console.log(this.props);\r\n       const {abhiprayKiList,auth,notifications}=this.props;\r\n       console.log('pyarisi sanju');\r\n       \r\n\r\n       if(!auth.uid)return<Redirect to='/signin'/>\r\n        return(\r\n            \r\n            <div className=\"dash container\">\r\n            <div className=\"row\">\r\n               <div className=\"col s12 m6\">\r\n                   <AbhiprayList abhiprayKiList={abhiprayKiList}/>\r\n               </div>\r\n               <div className=\"col s12 m5 offset-m1\">\r\n               <Notification notifications={notifications}/>\r\n                  \r\n               </div>\r\n \r\n            </div>\r\n \r\n         </div>\r\n        );\r\n\r\n       \r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    // console.log(state);\r\n    // console.log('...................................')\r\n    return{\r\n        // abhiprayKiList: state.project.books\r\n        abhiprayKiList: state.firestore.ordered.abhipray,\r\n        auth:state.firebase.auth,\r\n        notifications:state.firestore.ordered.notifications\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {\r\n            collection:'abhipray',orderBy:['createdAt','desc']\r\n        },\r\n        {\r\n            collection:'notifications',limit:3,orderBy:['time','desc']\r\n        }\r\n    ])\r\n)( Dashboard);","\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction AbhiprayDetails(props) {\r\n    // console.log(props);\r\n    // const id=props.match.params.id;\r\n    // console.log(props);\r\n    const {ekAbhi,auth}=props;\r\n    if(!auth.uid)return<Redirect to='/signin'/>\r\n     if (ekAbhi){\r\n        return (\r\n            < div className=\"container section AbhipraySummary\">\r\n               <div className=\"card z-depth-2\">\r\n                   <div className=\"card-content\">\r\n                         <span className=\"card-title\">{ekAbhi.title}</span>\r\n                         <p>{ekAbhi.content}</p>\r\n                   <div className=\"card-action blue lighten-4 grey-text\">\r\n                          <div>Posted by {ekAbhi.authfn}</div>\r\n                          <div>{moment(ekAbhi.createdAt.toDate()).calendar()}</div>\r\n                   </div>\r\n     \r\n                   </div>\r\n     \r\n               </div>\r\n            </div>\r\n     \r\n     \r\n         )\r\n\r\n     }\r\n     else{\r\n         return(\r\n             <div className=\"container center\">\r\n             <p>Loading ......</p>\r\n\r\n             </div>\r\n         )\r\n     }\r\n    \r\n}\r\nconst mapStateToProps=(state,ownProps)=>{\r\n    //console.log(state);\r\n    const id=ownProps.match.params.id;\r\n    const abhiprayKiList=state.firestore.data.abhipray;\r\n    const ekAbhi=abhiprayKiList? abhiprayKiList[id]:null\r\n    return{\r\n        ekAbhi:ekAbhi,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps)\r\n) (AbhiprayDetails)\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {signIn} from '../../store/actions/authActions';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n class SignIn extends Component {\r\n\r\n    state={\r\n        email:\"\",\r\n        password:\"\"\r\n\r\n    }\r\n    handleChange =(e) =>{\r\n        // console.log(e);\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n        \r\n    }\r\n    handleSubmit =(e) =>{\r\n        // console.log(e);\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const {authErr,auth}=this.props;\r\n        if(auth.uid)return<Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n               <form onSubmit={this.handleSubmit} className=\"transparant\">\r\n                   <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                   <div className=\"input-field\">\r\n                       <label htmlFor=\"email\">Email</label>\r\n                       <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n\r\n                   </div>\r\n                   <div className=\"input-field\">\r\n                       <label htmlFor=\"password\">Password</label>\r\n                       <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n\r\n                   </div>\r\n                   <div className=\"input-field\">\r\n                       <button className=\"btn gray darken-3  z-depth-4\">Log In</button>\r\n                       <div className=\"red-text center\">\r\n                         {authErr ?<p>{authErr}</p>:null}\r\n\r\n                       </div>\r\n                   </div>\r\n\r\n               </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n const mapStateToProps = (state) => {\r\n     return{\r\n         authErr: state.auth.authError,\r\n         auth:state.firebase.auth\r\n     }\r\n }\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        signIn:(creds)=>dispatch(signIn(creds))\r\n    }\r\n}\r\n  \r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signUp} from '../../store/actions/authActions';\r\n\r\n class SignUp extends Component {\r\n\r\n    state={\r\n        email:\"\",\r\n        password:\"\",\r\n        fname:\"\",\r\n        lname:\"\"\r\n\r\n    }\r\n    handleChange =(e) =>{\r\n        // console.log(e);\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n        \r\n    }\r\n    handleSubmit =(e) =>{\r\n        // console.log(e);\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const {auth,authErr}=this.props;\r\n        if(auth.uid)return<Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n               <form onSubmit={this.handleSubmit} className=\"transparant\">\r\n                   <h5 className=\"gray-text text-darken-3\">Sign Up</h5>\r\n                   <div className=\"input-field\">\r\n                       <label htmlFor=\"First Name\">First Name</label>\r\n                       <input type=\"text\" id=\"fname\" onChange={this.handleChange}></input>\r\n\r\n                   </div>\r\n                   <div className=\"input-field\">\r\n                       <label htmlFor=\"Last Name\">Last Name</label>\r\n                       <input type=\"text\" id=\"lname\" onChange={this.handleChange}></input>\r\n\r\n                   </div>\r\n                   <div className=\"input-field\">\r\n                       <label htmlFor=\"email\">Email</label>\r\n                       <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n\r\n                   </div>\r\n                   <div className=\"input-field\">\r\n                       <label htmlFor=\"password\">Password</label>\r\n                       <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n\r\n                   </div>\r\n                   <div className=\"input-field\">\r\n                       <button className=\"btn gray darken-3  z-depth-4\">Sign Up</button>\r\n                       <div className=\"red-text center\">\r\n                         {authErr ?<p>{authErr}</p>:null}\r\n\r\n                       </div>\r\n                   </div>\r\n\r\n               </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n     \r\n        auth:state.firebase.auth,\r\n        authErr:state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signUp:(newUser)=>dispatch(signUp(newUser))\r\n    }\r\n}\r\n  \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);\r\n\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n class CreateAbhipray extends Component {\r\n\r\n    state={\r\n        title:\"\",\r\n        content:\"\"\r\n\r\n    }\r\n    handleChange =(e) =>{\r\n        // console.log(e);\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n        \r\n    }\r\n    handleSubmit =(e) =>{\r\n        // console.log(e);\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const {auth}=this.props;\r\n        if(!auth.uid)return<Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"container\">\r\n               <form onSubmit={this.handleSubmit} className=\"transparant\">\r\n                   <h5 className=\"grey-text text-darken-3\">Likhee</h5>\r\n                   <div className=\"input-field\">\r\n                       <label htmlFor=\"title\">Title</label>\r\n                       <input type=\"text\" id=\"title\" onChange={this.handleChange}></input>\r\n\r\n                   </div>\r\n                   <div className=\"input-field\">\r\n                       <label htmlFor=\"Abhipray\">Abhipray</label>\r\n                       <textarea name=\"\" id=\"content\" cols=\"30\" rows=\"10\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n\r\n                   </div>\r\n                   <div className=\"input-field\">\r\n                       <button className=\"btn gray darken-3  z-depth-4\">Create</button>\r\n                   </div>\r\n\r\n               </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state);\r\n    return{\r\n        \r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n const mapDispatchToProps = (dispatch)=>{\r\n     return {\r\n         createProject:(project)=>dispatch(createProject(project))\r\n     }\r\n\r\n }\r\n \r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateAbhipray);\r\n\r\n\r\n\r\n// print(\"HI MY NAME IS ABHIJEET JAISWAL\")\r\n// for(i in Range(1,100))\r\n//     print(i)\r\n\r\n// print(\" \\n\")\r\n// print(\"sanjana kuttti\")\r\n\r\n","export const createProject=(project)=>{\r\n    // return {\r\n        // type:\"ADD_PROJECT\",\r\n        // project: project\r\n    // }\r\n\r\n\r\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\r\n       const firestore=getFirestore();\r\n       const profile=getState().firebase.profile;\r\n       const authId=getState().firebase.auth.uid;\r\n       firestore.collection('abhipray').add({\r\n           ...project,\r\n           authfn:profile.fname,\r\n           authln:profile.lname,\r\n           authid:authId,\r\n           createdAt:new Date()\r\n       }).then(()=>{\r\n        dispatch({type: 'CREATE_PROJECT',project:project});\r\n       }).catch((err)=>{\r\n        dispatch({type: 'CREATE_PROJECT_ERROR',err});\r\n       })\r\n        \r\n        \r\n    }\r\n}","import React from 'react';\nimport {BrowserRouter ,Switch,Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport AbhiprayDetails from './components/abhipray/AbhiprayDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateAbhipray from './components/abhipray/CreateAbhipray';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n     <Navbar></Navbar>\n     \n     <Switch>\n        <Route exact path='/' component={Dashboard}/>\n        <Route path='/Abhipray/:id' component={AbhiprayDetails}/>\n        <Route path='/signin' component={SignIn}/>\n        <Route path='/signup' component={SignUp}/>\n        <Route path='/createAbhipray' component={CreateAbhipray}/>\n     </Switch>\n    </div>\n\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst initState={\r\n    authError:null\r\n\r\n}\r\nconst authReducer = (state = initState, action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':{\r\n            console.log('log karate samay aaei hai error');\r\n            return{\r\n                ...state,\r\n                authError:'Login Failed'\r\n            }\r\n\r\n        }  \r\n        case 'LOGIN_SUCCESS':{\r\n            console.log('log karate samay aaei hai Success');\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n\r\n        }  \r\n        case 'SIGNOUT_SUCCESS':{\r\n            console.log('log out kar diya ..chalo nikalo bahar');\r\n            return state;\r\n\r\n        }  \r\n        case 'SIGNUP_SUCCESS':{\r\n            console.log('khata kholne k liye Dhanyawaad!');\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n\r\n        }  \r\n        case 'SIGNUP_ERROR':{\r\n            console.log('Itna bhi karate nahi aaya sign up hi nahi aaya');\r\n            return{\r\n                ...state,\r\n                authError:action.err.message\r\n            }\r\n\r\n        } \r\n        default:{\r\n            return state;\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default authReducer;","\r\n\r\nconst initState={\r\n    books: [\r\n        {id: '1' ,title: 'rich dad poor dad', abhipray:'One-sentence summary of “Rich Dad Poor Dad” : The main reason why people struggle with financial problems is because they spend several years in school but learn nothing about money and investments. The result is that people learn to work at the service of money… but never learn to put money to work for them.'},\r\n        {id: '2' ,title: 'rich dad poor dad', abhipray:'One-sentence summary of “Rich Dad Poor Dad” : The main reason why people struggle with financial problems is because they spend several years in school but learn nothing about money and investments. The result is that people learn to work at the service of money… but never learn to put money to work for them.'},\r\n        {id: '3' ,title: 'rich dad poor dad', abhipray:'One-sentence summary of “Rich Dad Poor Dad” : The main reason why people struggle with financial problems is because they spend several years in school but learn nothing about money and investments. The result is that people learn to work at the service of money… but never learn to put money to work for them.'},\r\n    ]\r\n}\r\nconst projectReducer = (state = initState, action)=>{\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':{\r\n            console.log('CREATE_PROJECT***',action.project);\r\n            return state;\r\n        }\r\n        case 'CREATE_PROJECT_ERROR':{\r\n            console.log('CREATE_PROJECT_ERROR***',action.err);\r\n            return state;\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n            \r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default projectReducer;","import {combineReducers} from 'redux';\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport {firestoreReducer} from 'redux-firestore';\r\n//for auth\r\nimport {firebaseReducer} from 'react-redux-firebase';\r\n\r\nconst rootReducer =combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer,\r\n    //to check the status of user wether logged in or not\r\n    firebase:firebaseReducer\r\n\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\n\r\nvar fbConfig = {\r\n    apiKey: \"AIzaSyCzA4mnZpPrzihoQzjwIc6kEDNO4Ywid6A\",\r\n    authDomain: \"web-apps-389b3.firebaseapp.com\",\r\n    databaseURL: \"https://web-apps-389b3.firebaseio.com\",\r\n    projectId: \"web-apps-389b3\",\r\n    storageBucket: \"web-apps-389b3.appspot.com\",\r\n    messagingSenderId: \"281296501074\",\r\n    appId: \"1:281296501074:web:8ffc8900f3815a94db228b\"\r\n  };\r\n  firebase.initializeApp(fbConfig);\r\n  firebase.firestore().settings({timestampsInSnapshots:true});\r\n \r\n\r\n  export default firebase;","// //......vid no 17 comments wala part se ise replace kiya because version match nahi hore the\n// // import React from 'react';\n// // import ReactDOM from 'react-dom';\n// // import './index.css';\n// // import App from './App';\n// // import * as serviceWorker from './serviceWorker';\n\n\n// // import {createStore,applyMiddleware,compose} from 'redux';\n// // import rootReducer from './store/reducer/roorReducer';\n// // import {Provider} from 'react-redux';\n// // import thunk from 'redux-thunk';\n\n// // //firebase wale imports\n// // import {reduxFirestore,createFirestoreInstance, getFirestore} from 'redux-firestore';\n// // // import {reactReduxFirebase,getFirebase } from 'react-redux-firebase';\n// // import {ReactReduxFirebaseProvider,getFirebase} from 'react-redux-firebase'\n\n// // import fbConfig from './config/fbConfig';\n\n// // const store = createStore(rootReducer,\n// //   compose(\n    \n// //     applyMiddleware(thunk.withExtraArgument({getFirestore,getFirebase})),\n// //     reduxFirestore(firebase,fbConfig),\n// //     //reactReduxFirebase(fbConfig)\n    \n\n// //     ));\n// //     const rrfProps={\n// //       firebase,\n// //       config:fbConfig,\n// //       dispatch:store.dispatch,\n// //       createFirestoreInstance\n// //     }\n\n// // ReactDOM.render(\n// //   <Provider store={store}> <React.StrictMode>\n// //   <ReactReduxFirebaseProvider {...rrfProps}><App /></ReactReduxFirebaseProvider>\n  \n// // </React.StrictMode></Provider>\n// //  ,\n// //   document.getElementById('root')\n// // );\n\n// // // If you want your app to work offline and load faster, you can change\n// // // unregister() to register() below. Note this comes with some pitfalls.\n// // // Learn more about service workers: https://bit.ly/CRA-PWA\n// // serviceWorker.unregister();\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n// import { createStore, applyMiddleware, compose } from 'redux';\n// import rootReducer from './store/reducer/roorReducer';\n// import { Provider } from 'react-redux'\n// import thunk from 'redux-thunk'\n// import { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\n\n// import fbConfig from './config/fbConfig'\n// import firebase from 'firebase/app'\n// import { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\n\n\n// const store = createStore(\n//   rootReducer,\n//   compose(\n//     applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n//     reduxFirestore(fbConfig),\n//     ReactReduxFirebaseProvider(fbConfig,{useFirestoreForProfile:true,userProfile:'users'})\n//   )\n// );\n\n// const rrfProps = {\n//   firebase,\n//   config: fbConfig,\n//   dispatch: store.dispatch,\n//   createFirestoreInstance\n// };\n\n// ReactDOM.render(\n//   <Provider store={store}>\n//     <ReactReduxFirebaseProvider {...rrfProps}>\n//       <App />\n//     </ReactReduxFirebaseProvider>\n//   </Provider>,\n//   document.getElementById(\"root\")\n// );\n// serviceWorker.unregister();\n\n\n\n\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\n//import rootReducer from \"./store/reducer/rootReducer\";\nimport rootReducer from './store/reducer/roorReducer';\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\n//for render on auth ready\n// import { useSelector  } from 'react-redux'\n// import { isLoaded  } from 'react-redux-firebase';\n\n\n\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\n\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\n// function AuthIsLoaded({ children }) {\n//   const auth = useSelector(state => state.firebase.auth)\n//   if (!isLoaded(auth)) return <div className=\"center\"> <p>Loading Mario Plan...</p></div>;\n//       return children\n// }\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      {/* <AuthIsLoaded> */}\n      <App />\n      {/* </AuthIsLoaded> */}\n      \n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}